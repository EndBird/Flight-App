package group730.bookingclient.activities;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;

import group730.bookingclient.BookingClient;
import group730.bookingclient.R;
import group730.bookingclient.core.entities.User;
import group730.bookingclient.core.services.UserManager;

/**
 * A screen that offers login via email/password.
 */
public class LoginActivity extends Activity {

    // UI references.
    private AutoCompleteTextView mEmailView;
    private EditText mPasswordView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        BookingClient.GetInstance().initialize(this);

        // Set up the login form.
        mEmailView = (AutoCompleteTextView) findViewById(R.id.email);
        mPasswordView = (EditText) findViewById(R.id.password);
    }

    /**
     * Attempts to sign in with the account specified by the login form.
     * If there are form errors (invalid email, missing fields, etc.), the
     * errors are presented and no actual login attempt is made.
     */
    public void signInClicked(View view) {
        boolean cancel = false;
        View focusView = null;

        // Store values at the time of the login attempt.
        String email = mEmailView.getText().toString();
        String password = mPasswordView.getText().toString();

        if (!isExistingEmail(email)) {
            mEmailView.setError("This email does not exist in the database.");
            focusView = mEmailView;
            cancel = true;
        } else {
            //Validate Sign in
            User user = UserManager.getInstance()
                    .validateAndReturnUser(email, password);

            if (user == null) {
                mPasswordView.setError("The entered password is incorrect.");
                focusView = mPasswordView;
                cancel = true;
            } else {
                UserManager.getInstance().setCurrentUser(user);
                startActivity(new Intent(this, HomeActivity.class));
            }
        }

        if (cancel) {
            focusView.requestFocus();
        } else {
            this.finish();
        }
    }

    private boolean isExistingEmail(String email) {
        return UserManager.getInstance().getUsers().containsKey(email);
    }
}

