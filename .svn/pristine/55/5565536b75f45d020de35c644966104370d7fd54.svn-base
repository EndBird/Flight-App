package group730.bookingclient.core.entities;

import java.util.Date;
import java.util.List;
import java.util.ArrayList;

import group730.bookingclient.core.services.DataManager;
import group730.bookingclient.core.services.UserManager;
import group730.bookingclient.core.utils.DateTimeUtils;

/**
 * Client class for a client, which is a subclass of User. Clients can edit
 * personal information as well as book itineraries.
 *
 */
public class Client extends User {

    private String address;
    private String creditCardNumber;
    private Date expiryDate;
    private List<Itinerary> bookedItineraries;

    /**
     * Creates a Client object.
     *
     * @param firstName        String represents the first name of client.
     * @param lastName         String represents the last name of the client.
     * @param email            String represents the email of the client.
     * @param address          String represents the address of the client.
     * @param creditCardNumber String represents the credit card number of the
     *                         client.
     * @param expiryDate       Date represents the credit card's expiry date.
     */
    public Client(String firstName, String lastName, String email, String password,
                  String address, String creditCardNumber, Date expiryDate) {
        super(UserManager.USER_TYPE.CLIENT, firstName, lastName, email, password);
        this.address = address;
        this.creditCardNumber = creditCardNumber;
        this.expiryDate = expiryDate;
        this.bookedItineraries = new ArrayList<>();
    }

    /**
     * Returns the address of this client.
     *
     * @return the address
     */
    public String getAddress() {
        return address;
    }

    /**
     * Assigns the address to this client.
     *
     * @param address the address to set
     */
    public void setAddress(String address) {
        this.address = address;
        UserManager.getInstance().saveUsers();
    }

    /**
     * Returns the credit card number of this client.
     *
     * @return the creditCardNumber
     */
    public String getCreditCardNumber() {
        return creditCardNumber;
    }

    /**
     * Assigns the credit card number to this client
     *
     * @param creditCardNumber the creditCardNumber to set
     */
    public void setCreditCardNumber(String creditCardNumber) {
        this.creditCardNumber = creditCardNumber;
        UserManager.getInstance().saveUsers();
    }

    /**
     * Returns this client's credit card expiry date
     *
     * @return the expiryDate
     */
    public Date getExpiryDate() {
        return expiryDate;
    }

    /**
     * Assigns this client's credit card number expiry date
     *
     * @param expiryDate the expiryDate to set
     */
    public void setExpiryDate(Date expiryDate) {
        this.expiryDate = expiryDate;
        UserManager.getInstance().saveUsers();
    }

    /**
     * Adds itinerary to the bookedItineraries attribute of this client.
     *
     * @param itinerary the itinerary to add to the list of User's booked itineraries.
     */
    public void bookItinerary(Itinerary itinerary) {
        this.bookedItineraries.add(itinerary);
        UserManager.getInstance().saveUsers();

    }

    /**
     * Removes itinerary from the bookedItineraries attribute of this client.
     *
     * @param itinerary the itinerary to remove from the list of User's booked itineraries.
     */
    public void unBookItinerary(Itinerary itinerary) {
        this.bookedItineraries.remove(itinerary);
        UserManager.getInstance().saveUsers();
    }

    /**
     * Returns all of the itineraries which this client has booked.
     *
     * @return the bookedItineraries
     */
    public List<Itinerary> getBookedItineraries() {
        return bookedItineraries;
    }

    /**
     *  Return String representation of this client in the following format:
     *  lastName,firstName,email,address,creditCardNumber,expiryDate
     *
     * @return A string representation of client.
     */
    @Override
    public String toString() {
        return String.format("%s,%s,%s,%s,%s,%s",
                lastName,
                firstName,
                email,
                address,
                creditCardNumber,
                DateTimeUtils.convertDateToString(expiryDate));
    }
}

